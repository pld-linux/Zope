#!/bin/sh
# zope
#
# chkconfig: 345 90 10
# description: Starts and stops the Zope instances
# processname: z2.py
# config: /etc/sysconfig/zope
#
# probe: true
#


# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

# Check that networking is up.
if is_yes "${NETWORKING}"; then
	if [ ! -f /var/lock/subsys/network ]; then
		msg_network_down Zope
		exit 1
	fi
else
	exit 0
fi

# Zope settings.
. /etc/sysconfig/zope


start_instances()
{
    RETVAL=1
    for i in /etc/zope/*
    do
    	if [ ! -d $i -o ! -f $i/zope.conf ]; then
		continue
	fi
	
	INSTANCE_NAME=`basename $i`
	if [ "x$INSTANCE_NAME" = "xmain" ]; then
	    z_name="Zope"
	else
	    z_name="Zope ($INSTANCE_NAME)"
	fi

	if [ -f /var/lock/subsys/"zope-$INSTANCE_NAME" ]; then
		msg_already_running "$z_name"
		continue	
	fi

	if is_yes "$RESPAWN" ; then
		respawn="--respawn"
	else
		respawn=""
	fi
	
	msg_starting "$z_name"
	busy
	/usr/sbin/daemon --name="$INSTANCE_NAME" \
		-P /var/run/zope \
		$respawn \
		--output="/var/log/zope/$INSTANCE_NAME.log" \
		/usr/sbin/runzope "$INSTANCE_NAME"
	RET=$?
	if [ $RET -eq 0 ]; then
		ok
		touch /var/lock/subsys/"zope-$INSTANCE_NAME"
		RETVAL=0
	else
		fail
	fi
    done
    return $RETVAL
}

stop_instances()
{
    RETVAL=1
    for i in /etc/zope/*
    do
    	if [ ! -d $i -o ! -f $i/zope.conf ]; then
		continue
	fi
	INSTANCE_NAME=`basename $i`
	if [ "x$INSTANCE_NAME" = "xmain" ]; then
	    z_name="Zope"
	else
	    z_name="Zope ($INSTANCE_NAME)"
	fi

	if [ ! -f /var/lock/subsys/"zope-$INSTANCE_NAME" ]; then
		msg_not_running "$z_name"
		continue	
	fi
	msg_stoping "$z_name"
	busy
	/usr/sbin/daemon --name="$INSTANCE_NAME" \
		-P /var/run/zope \
		--stop 2>/dev/null
	RET=$?
	if [ $RET -eq 0 ]; then
		ok
		RETVAL=0
	else
		fail
	fi
	rm -f /var/lock/subsys/"zope-$INSTANCE_NAME"
    done
    return $RETVAL
}

stat_instances()
{
    for i in /etc/zope/*
    do
    	if [ ! -d $i -o ! -f $i/zope.conf ]; then
		continue
	fi
	INSTANCE_NAME=`basename $i`
    	INSTANCE_HOME=/var/lib/zope/$INSTANCE_NAME
	PIDFILE=$INSTANCE_HOME/var/Z2.pid
	if [ "x$INSTANCE_NAME" = "xmain" ]; then
	    z_name="Zope"
	else
	    z_name="Zope ($INSTANCE_NAME)"
	fi
	if [ -f $PIDFILE ]; then
	    if ps -p `cat $PIDFILE` >/dev/null; then
	    	RETVAL=$?
		nls "%s (pid %s) is running..." "$z_name" "`cat $PIDFILE`"
	    else
		nls "%s dead but pid file exists" "$z_name"
		RETVAL=1
	    fi
	else
	    nls "%s is stopped" "$z_name"
	    RETVAL=2
	fi
    done
}

# See how we were called.
case "$1" in
  start)
		start_instances && touch /var/lock/subsys/zope
	;;
  stop)
		stop_instances && rm -f /var/lock/subsys/zope
	;;
  status)
		stat_instances
	;;
  restart|force-reload)
	$0 stop
	$0 start
	exit $?
	;;
  *)
	msg_usage "$0 {start|stop|restart|force-reload|status}"
	exit 3
	;;
esac

exit $RETVAL
